# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: jakobjavascript24
# "service" is the name of this project. This will also be added to your AWS resource names.
service: quiztopia

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  # Här är min policy för DynamoDB
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem # Hämta ett enskilt item med PK + SK
        - dynamodb:PutItem # Lägga till ett nytt item
        - dynamodb:Query # Göra en Query
        - dynamodb:DeleteItem # Ta bort ett item

      Resource:
        - arn:aws:dynamodb:eu-north-1:791493234438:table/QuizTable
      # Här ger jag access till indexet
    - Effect: Allow
      Action:
        - dynamodb:Query # Query mot index
      Resource:
        - arn:aws:dynamodb:eu-north-1:791493234438:table/QuizTable/index/EntityTypeIndex
      # Här ger jag access till CloudWatch loggar
    - Effect: Allow
      Action:
        - logs:CreateLogGroup # Skapa en logg-grupp
        - logs:CreateLogStream # Skapa en ny logg-stream
        - logs:PutLogEvents # Skriva faktiska logg-meddelanden (console.log, errors, etc.)
      Resource: "*"
  #-------------

  # role: arn:aws:iam::791493234438:role/cloudPushRole
  # Uncomment to easily set up a custom domain. Read the docs for more details:
  # https://www.serverless.com/framework/docs/providers/aws/guide/domains
  # domain: api.example.com

functions:
  createUser:
    handler: ./functions/createUser/index.handler
    events:
      - http:
          path: /api/auth/signup
          method: post

  logInUser:
    handler: ./functions/logInUser/index.handler
    events:
      - http:
          path: /api/auth/login
          method: post

  createQuiz:
    handler: ./functions/createQuiz/index.handler
    events:
      - http:
          path: /api/quiz
          method: post

  addQuestionsToQuiz:
    handler: ./functions/addQuestionsToQuiz/index.handler
    events:
      - http:
          path: /api/quiz/question
          method: post

  getAllQuizes:
    handler: ./functions/getAllQuizes/index.handler
    events:
      - http:
          path: /api/quiz
          method: get

  getSpecifikQuiz:
    handler: ./functions/getSpecifikQuiz/index.handler
    events:
      - http:
          path: /api/quiz/{quizId}
          method: get

  deleteQuiz:
    handler: ./functions/deleteQuiz/index.handler
    events:
      - http:
          path: /api/quiz/{quizId}
          method: delete
  addPoints:
    handler: ./functions/addPoints/index.handler
    events:
      - http:
          path: /api/quiz/addPoints
          method: post
  getScoreBoard:
    handler: ./functions/getScoreBoard/index.handler
    events:
      - http:
          path: /api/quiz/getScoreBoard/{quizId}
          method: get
resources:
  Resources:
    QuizTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: QuizTable
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: entityType
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: EntityTypeIndex
            KeySchema:
              - AttributeName: entityType
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
